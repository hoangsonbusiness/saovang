{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/auth-guard.service.ts","./src/app/auth/auth.service.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-src';\n}\n","<app-navbar></app-navbar>\n<div class=\"container\">\n    <!-- <flash-messages></flash-messages> -->\n    <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { HttpClientModule } from \"@angular/common/http\";\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { AuthGuardService as AuthGuard } from './auth/auth-guard.service';\nimport { AuthService as Auth} from './auth/auth.service';\nimport { LoginComponent } from './components/login/login.component';\nconst appRoutes: Routes =  [\n  {path:'', component: HomeComponent},\n  { path: 'home', component: HomeComponent, canActivate: [AuthGuard] },\n  {path:'login', component: LoginComponent},\n]\n\nexport function tokenGetter() {\n  return localStorage.getItem(\"token\");\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    NavbarComponent,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    RouterModule.forRoot(appRoutes),\n    HttpClientModule,\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: tokenGetter,\n        whitelistedDomains: [\"example.com\"],\n        blacklistedRoutes: [\"http://example.com/examplebadroute/\"],\n      },\n    }),\n  ],\n  providers: [AuthGuard, Auth],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate{\n\n  constructor(public auth: AuthService, public router: Router) { }\n\n  canActivate() {\n    if (!this.auth.isAuthenticated()) {\n      this.router.navigate(['login']);\n      return false;\n    }\n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  uri = 'http://localhost:8080/login';\n\n  constructor(public jwtHelper: JwtHelperService,\n    private http:HttpClient) { \n  }\n\n  async isAuthenticated(): Promise<boolean> {\n    let isTrue:boolean = true;\n    let isFalse:boolean = false;\n    return await new Promise ((resolve, reject) => {\n      this.http.get(`${this.uri}/test`)\n      .subscribe(res => {\n         resolve(isTrue)\n      },\n      err => {\n        reject(isFalse)\n      },\n      () => {\n        reject(isFalse)\n      }\n    )\n    }) \n  }\n      \n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>home works!</p>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row justify-content-center\">\n        <div class=\"col-lg-6 col-md-6 col-sm-12 col-xs-12\">\n\n            <form novalidate>\n                <div class=\"input-group\">\n                    <div class=\"input-group-prepend\">\n                        <span class=\"input-group-text\" id=\"basic-addon1\">@</span>\n                    </div>\n                    <input type=\"text\" class=\"form-control\" placeholder=\"Username\" aria-label=\"Username\" aria-describedby=\"basic-addon1\">\n                </div>\n                <div class=\"input-group\">\n                    <div class=\"input-group-prepend\">\n                        <span class=\"input-group-text\" id=\"basic-addon2\">@</span>\n                    </div>\n                    <input type=\"password\" class=\"form-control\" placeholder=\"Password\" aria-label=\"Password\" aria-describedby=\"basic-addon2\">\n                </div>\n                <div>\n                    <input type=\"submit\" class=\"btn btn-outline-success\" value=\"Login\">\n                    <a href=\"#\">Forgot password</a>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark bg-dark fixed-top\">\n    <a class=\"navbar-brand\" href=\"#\">Trung tâm SAO VÀNG</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExampleDefault\" aria-controls=\"navbarsExampleDefault\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n\n    <div class=\"collapse navbar-collapse\" id=\"navbarsExampleDefault\">\n        <ul class=\"navbar-nav mr-auto\">\n            <li class=\"nav-item\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\">\n                <a class=\"nav-link\" [routerLink]=\"['/']\">Trang chủ <span></span></a>\n            </li>\n        </ul>\n        <ul class=\"navbar-nav ml-auto\">\n            <li class=\"nav-item\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\">\n                <a class=\"nav-link\" [routerLink]=\"['/dashboard']\">Dashboard </a>\n            </li>\n            <!-- <li class=\"nav-item\" *ngIf=\"authService.loggedIn() && authService.authorizationAdmin()\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\">\n                <a class=\"nav-link\" [routerLink]=\"['/dashboard']\">Dashboard </a>\n            </li> -->\n            <!-- <li class=\"nav-item\" *ngIf=\"authService.loggedIn()\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\">\n                <a class=\"nav-link\" [routerLink]=\"['/profile']\">Profile </a>\n            </li>\n            <li class=\"nav-item\" *ngIf=\"!authService.loggedIn()\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\">\n                <a class=\"nav-link\" [routerLink]=\"['/login']\">Login </a>\n            </li>\n            <li class=\"nav-item\" *ngIf=\"!authService.loggedIn()\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\">\n                <a class=\"nav-link\" [routerLink]=\"['/register']\">Register</a>\n            </li>\n            <li class=\"nav-item\" *ngIf=\"authService.loggedIn()\"><a class=\"nav-link\" (click)=\"onLogoutClick()\" href=\"#\">Logout</a>\n            </li> -->\n        </ul>\n    </div>\n</nav>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}