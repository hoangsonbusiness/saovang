{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth-guard.service.ts","webpack:///src/app/auth/auth.service.ts","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","appRoutes","path","component","canActivate","tokenGetter","localStorage","getItem","AppModule","config","whitelistedDomains","blacklistedRoutes","declarations","providers","bootstrap","AuthGuardService","auth","router","route","state","isAuthenticated","subscribe","res","err","navigate","providedIn","AuthService","jwtHelper","http","uri","get","HomeComponent","LoginComponent","NavbarComponent","environment","production","bootstrapModule","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-src';\n}\n","<app-navbar></app-navbar>\n<div class=\"container\">\n    <!-- <flash-messages></flash-messages> -->\n    <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { HttpClientModule } from \"@angular/common/http\";\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { AuthGuardService as AuthGuard } from './auth/auth-guard.service';\nimport { AuthService as Auth} from './auth/auth.service';\nimport { LoginComponent } from './components/login/login.component';\nconst appRoutes: Routes =  [\n  {path:'', component: HomeComponent},\n  { path: 'home', component: HomeComponent, canActivate: [AuthGuard] },\n  {path:'login', component: LoginComponent},\n]\n\nexport function tokenGetter() {\n  return localStorage.getItem(\"token\");\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    NavbarComponent,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    RouterModule.forRoot(appRoutes),\n    HttpClientModule,\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: tokenGetter,\n        whitelistedDomains: [\"example.com\"],\n        blacklistedRoutes: [\"http://example.com/examplebadroute/\"],\n      },\n    }),\n  ],\n  providers: [AuthGuard, Auth],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot,RouterStateSnapshot } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate{\n\n  constructor(public auth: AuthService, public router: Router) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot):any{\n    // let is =  this.auth.isAuthenticated();\n    // if ( !is) {\n    //   this.router.navigate(['login']);\n    //   return false;\n    // } else {\n    //   return true;\n    // }\n\n    this.auth.isAuthenticated().subscribe(\n      res => {\n        return true;\n      },\n      err => {\n        this.router.navigate(['login']);\n        return false;\n      }\n    )\n    \n  }\n}\n","import { Injectable } from '@angular/core';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  uri = 'http://localhost:8080/login';\n\n  constructor(public jwtHelper: JwtHelperService,\n    private http:HttpClient) { \n  }\n\n   isAuthenticated() {\n    return this.http.get(`${this.uri}/test`);\n  }\n      \n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>home works!</p>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row justify-content-center\">\n        <div class=\"col-lg-6 col-md-6 col-sm-12 col-xs-12\">\n\n            <form novalidate>\n                <div class=\"input-group\">\n                    <div class=\"input-group-prepend\">\n                        <span class=\"input-group-text\" id=\"basic-addon1\">@</span>\n                    </div>\n                    <input type=\"text\" class=\"form-control\" placeholder=\"Username\" aria-label=\"Username\" aria-describedby=\"basic-addon1\">\n                </div>\n                <div class=\"input-group\">\n                    <div class=\"input-group-prepend\">\n                        <span class=\"input-group-text\" id=\"basic-addon2\">@</span>\n                    </div>\n                    <input type=\"password\" class=\"form-control\" placeholder=\"Password\" aria-label=\"Password\" aria-describedby=\"basic-addon2\">\n                </div>\n                <div>\n                    <input type=\"submit\" class=\"btn btn-outline-success\" value=\"Login\">\n                    <a href=\"#\">Forgot password</a>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark bg-dark fixed-top\">\n    <a class=\"navbar-brand\" href=\"#\">Trung tâm SAO VÀNG</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExampleDefault\" aria-controls=\"navbarsExampleDefault\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n\n    <div class=\"collapse navbar-collapse\" id=\"navbarsExampleDefault\">\n        <ul class=\"navbar-nav mr-auto\">\n            <li class=\"nav-item\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\">\n                <a class=\"nav-link\" [routerLink]=\"['/']\">Trang chủ <span></span></a>\n            </li>\n        </ul>\n        <ul class=\"navbar-nav ml-auto\">\n            <li class=\"nav-item\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\">\n                <a class=\"nav-link\" [routerLink]=\"['/dashboard']\">Dashboard </a>\n            </li>\n            <!-- <li class=\"nav-item\" *ngIf=\"authService.loggedIn() && authService.authorizationAdmin()\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\">\n                <a class=\"nav-link\" [routerLink]=\"['/dashboard']\">Dashboard </a>\n            </li> -->\n            <!-- <li class=\"nav-item\" *ngIf=\"authService.loggedIn()\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\">\n                <a class=\"nav-link\" [routerLink]=\"['/profile']\">Profile </a>\n            </li>\n            <li class=\"nav-item\" *ngIf=\"!authService.loggedIn()\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\">\n                <a class=\"nav-link\" [routerLink]=\"['/login']\">Login </a>\n            </li>\n            <li class=\"nav-item\" *ngIf=\"!authService.loggedIn()\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\">\n                <a class=\"nav-link\" [routerLink]=\"['/register']\">Register</a>\n            </li>\n            <li class=\"nav-item\" *ngIf=\"authService.loggedIn()\"><a class=\"nav-link\" (click)=\"onLogoutClick()\" href=\"#\">Logout</a>\n            </li> -->\n        </ul>\n    </div>\n</nav>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}